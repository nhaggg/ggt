import React, { useState } from "react";

// Single-file React component for a small AirPods e‑commerce front-end.
// Uses Tailwind classes (assumes Tailwind is set up in your project).
// Default export is the page component.

const PRODUCTS = [
  {
    id: "airpod-pro",
    title: "AirPods Pro (2nd Gen)",
    short: "Active Noise Cancellation · Spatial Audio",
    price: 199,
    badge: "Best Seller",
    imageAlt: "AirPods Pro 2nd Gen",
  },
  {
    id: "airpod-4th",
    title: "AirPods (4th Gen)",
    short: "Spatial Audio · Longer battery",
    price: 159,
    badge: "New",
    imageAlt: "AirPods 4th Gen",
  },
  {
    id: "airpod-3rd",
    title: "AirPods (3rd Gen)",
    short: "Adaptive EQ · MagSafe case",
    price: 129,
    badge: "Value",
    imageAlt: "AirPods 3rd Gen",
  },
];

export default function AirpodStore() {
  const [cart, setCart] = useState([]);
  const [email, setEmail] = useState("");
  const [country, setCountry] = useState("USA");
  const [showCheckoutSuccess, setShowCheckoutSuccess] = useState(false);

  function addToCart(productId) {
    setCart((c) => {
      const found = c.find((i) => i.id === productId);
      if (found) return c.map((i) => (i.id === productId ? { ...i, qty: i.qty + 1 } : i));
      const product = PRODUCTS.find((p) => p.id === productId);
      return [...c, { id: productId, title: product.title, price: product.price, qty: 1 }];
    });
  }

  function removeFromCart(productId) {
    setCart((c) => c.filter((i) => i.id !== productId));
  }

  function changeQty(productId, qty) {
    if (qty < 1) return removeFromCart(productId);
    setCart((c) => c.map((i) => (i.id === productId ? { ...i, qty } : i)));
  }

  const subtotal = cart.reduce((s, p) => s + p.price * p.qty, 0);
  const shipping = subtotal > 0 ? 9.99 : 0; // flat rate for demo
  const total = +(subtotal + shipping).toFixed(2);

  function handleCheckout(e) {
    e.preventDefault();
    // Enforce USA shipping only (per your request)
    if (country.trim().toUpperCase() !== "USA" && country.trim().toUpperCase() !== "UNITED STATES") {
      alert("We ship within the USA only. Please update your shipping country to USA to complete checkout.");
      return;
    }
    if (!email) {
      alert("Please provide an email to complete your order.");
      return;
    }
    // Demo behaviour: clear cart and show success
    setCart([]);
    setShowCheckoutSuccess(true);
    window.scrollTo(0, 0);
  }

  return (
    <div className="min-h-screen bg-gray-50 text-gray-900">
      <header className="bg-white shadow">
        <div className="mx-auto max-w-6xl px-6 py-6 flex items-center justify-between">
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 bg-gradient-to-br from-sky-400 to-indigo-600 rounded-lg flex items-center justify-center text-white font-bold">AP</div>
            <div>
              <h1 className="text-xl font-semibold">AirPod Shop</h1>
              <p className="text-sm text-gray-500">Genuine AirPods · USA shipping only</p>
            </div>
          </div>
          <div className="flex items-center gap-4">
            <div className="text-sm text-gray-700">Cart: <span className="font-medium">{cart.reduce((s, i) => s + i.qty, 0)}</span></div>
            <button
              onClick={() => window.scrollTo({ top: document.body.scrollHeight, behavior: "smooth" })}
              className="rounded-md bg-indigo-600 px-4 py-2 text-white text-sm"
            >
              View Cart
            </button>
          </div>
        </div>
      </header>

      <main className="mx-auto max-w-6xl px-6 py-12">
        <section className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {PRODUCTS.map((p) => (
            <article key={p.id} className="bg-white rounded-2xl p-6 shadow-sm">
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-lg font-semibold">{p.title}</h2>
                  <p className="text-sm text-gray-500 mt-1">{p.short}</p>
                </div>
                <div className="text-right">
                  <div className="text-xl font-bold">${p.price}</div>
                  <div className="text-xs text-gray-400">{p.badge}</div>
                </div>
              </div>

              <div className="my-4 h-40 rounded-lg bg-gray-100 flex items-center justify-center text-gray-400">
                <span className="text-sm">{p.imageAlt} (image placeholder)</span>
              </div>

              <div className="flex items-center gap-3">
                <button onClick={() => addToCart(p.id)} className="flex-1 rounded-md bg-indigo-600 px-4 py-2 text-white">Add to cart</button>
                <button onClick={() => alert('Product details modal not implemented in demo') } className="rounded-md border px-4 py-2 text-sm">Details</button>
              </div>
            </article>
          ))}
        </section>

        <section className="mt-12 grid grid-cols-1 lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 bg-white p-6 rounded-2xl shadow-sm">
            <h3 className="text-lg font-semibold">Order summary</h3>
            <div className="mt-4">
              {cart.length === 0 && <div className="text-sm text-gray-500">Your cart is empty — add some AirPods above.</div>}
              {cart.map((item) => (
                <div key={item.id} className="flex items-center justify-between mt-4">
                  <div>
                    <div className="font-medium">{item.title}</div>
                    <div className="text-sm text-gray-500">${item.price} · Qty: 
                      <input type="number" value={item.qty} min={1} onChange={(e) => changeQty(item.id, Number(e.target.value))} className="w-16 ml-2 rounded border px-2 py-1 text-sm" />
                    </div>
                  </div>
                  <div className="text-sm font-medium">${(item.price * item.qty).toFixed(2)}</div>
                </div>
              ))}

              <div className="mt-6 border-t pt-4">
                <div className="flex justify-between text-sm text-gray-600">Subtotal <span>${subtotal.toFixed(2)}</span></div>
                <div className="flex justify-between text-sm text-gray-600 mt-1">Shipping <span>${shipping.toFixed(2)}</span></div>
                <div className="flex justify-between text-lg font-semibold mt-3">Total <span>${total}</span></div>
              </div>
            </div>
          </div>

          <aside className="bg-white p-6 rounded-2xl shadow-sm">
            <h3 className="text-lg font-semibold">Checkout</h3>
            <form onSubmit={handleCheckout} className="mt-4 space-y-3">
              <div>
                <label className="block text-sm text-gray-600">Email</label>
                <input required value={email} onChange={(e) => setEmail(e.target.value)} className="w-full mt-1 rounded border px-3 py-2" placeholder="you@example.com" />
              </div>

              <div>
                <label className="block text-sm text-gray-600">Shipping country</label>
                <input required value={country} onChange={(e) => setCountry(e.target.value)} className="w-full mt-1 rounded border px-3 py-2" placeholder="USA" />
                <p className="text-xs text-gray-400 mt-1">We ship within the USA only. Orders from other countries will not be accepted.</p>
              </div>

              <div className="pt-2">
                <button type="submit" className="w-full rounded-md bg-green-600 px-4 py-2 text-white font-semibold">Place order — Pay ${total}</button>
              </div>
            </form>

            <div className="mt-6 text-xs text-gray-500">
              <strong>Warranty & policies</strong>
              <p className="mt-2">All devices include an <strong>Apple 1‑year limited warranty</strong> (manufacturer warranty). We do not provide additional refunds or replacements — purchases are final. Please read the full policy below before purchasing.</p>
            </div>
          </aside>
        </section>

        <section className="mt-12 bg-white p-6 rounded-2xl shadow-sm">
          <h3 className="text-lg font-semibold">Shipping, warranty & returns (important)</h3>
          <div className="mt-4 space-y-3 text-sm text-gray-700">
            <div>
              <strong>USA shipping only</strong>
              <p className="mt-1 text-gray-500">We ship to physical addresses within the United States only. Orders outside the United States will be canceled.</p>
            </div>

            <div>
              <strong>Apple 1‑year limited warranty</strong>
              <p className="mt-1 text-gray-500">Each product is covered by Apple's standard 1‑year limited warranty. Warranty claims (hardware defects, manufacturing faults) are handled following Apple's warranty process. You may be required to contact Apple directly or provide proof of purchase and serial numbers for warranty service.</p>
            </div>

            <div>
              <strong>No refunds / No replacements</strong>
              <p className="mt-1 text-gray-500">By buying from this store you acknowledge and accept our policy that all sales are final: we do not offer refunds or replacements. Warranty claims must be handled through Apple's warranty process. This policy does not alter your rights under local consumer protection laws (for example, state laws in the USA), which may provide additional remedies.</p>
            </div>

            <div>
              <strong>Legal note (recommended)</strong>
              <p className="mt-1 text-gray-500">Digital storefronts must comply with applicable consumer protection and e‑commerce laws. "No refunds" clauses may be limited or overridden by local law. We strongly recommend reviewing these policies with legal counsel before publishing.
              </p>
            </div>
          </div>
        </section>

        {showCheckoutSuccess && (
          <div className="mt-8 rounded-lg bg-green-50 border border-green-200 p-4 text-green-800">
            Order placed successfully! Check your email for order details. Remember warranty claims are handled through Apple.
          </div>
        )}

        <footer className="mt-12 text-center text-xs text-gray-400">
          <div>&copy; {new Date().getFullYear()} AirPod Shop. All product names and trademarks are the property of their respective owners. This site is an independent retailer and is not affiliated with Apple Inc.</div>
        </footer>
      </main>
    </div>
  );
}

